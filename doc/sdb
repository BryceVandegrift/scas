sass Debug Files
================

The sass linker can produce files that may be loaded into debuggers to help match
assembly code with machine code. It's similar to the SOBJ format.

This document takes a similar format to the gzip specification. That is:

In the diagrams below, a box like this:

+---+
|   | <-- the vertical bars might be missing
+---+

represents one byte; a box like this:

+==============+
|              |
+==============+

represents a variable number of bytes. 

Data Formats
------------

A few common data formats are in use. Strings are generally encoded as UTF-8
strings, and integers are always unsigned. Signed integers are converted to
unsigned, two's compliment, unless otherwise specified. All multi-octet values
are little-endian unless specified otherwise.

Header
------

+===========+---------+
| SASSDEBUG | Version |
+===========+---------+

"SASSDEBUG" is the literal ASCII string "SASSDEBUG". The version is an unsigned
8-bit integer that specifies what version of the SASSDEBUG specification is in
use. The current version is 0.

Symbols
-------

What follows is a list of symbols. This takes the same format as symbols in the
SASSOBJ format, but these are the final addresses of each symbol after linking.

+==============+============+
| Symbol count | Symbols... |
+==============+============+

The number of symbols is encoded as an unsigned 32-bit integer.

Each symbol takes the following format:

+=============+======+=======+
| Name length | Name | Value |
+=============+======+=======+

The length and value are both 32-bit unsigned integers. The name itself is a UTF-8
string with no null delimiter.

Assembly Code
-------------

Following the expression list is the assembly code that produced the machine code.
It contains each line of code, minus whitespace. For example, with the following
code segment:

    ; This is an example

    symbol:
        call symbol ; Stack overflow

Only this code would be preserved:

    ; This is an example
    symbol:
    call symbol ; Stack overflow

This section of the object file is a list of lines of code and affected addresses.
It takes the following format:

+=================+==========+
| Number of lines | Lines... |
+=================+==========+

Number of lines is an unsigned 32-bit integer. Each line appears as:

+=========+===============+=============+======+
| Address | Output length | Code length | Code |
+=========+===============+=============+======+

The address is relative to the start of the machine code, and the "output length"
is the total number of bytes of machine code produced by this line of assembly
code. The code length is the length of the following string of assembly code,
which has no null delimiter. Each length and the address are 32-bit unsigned
integers.
